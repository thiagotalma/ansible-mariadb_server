---

# We want to have our configuration enabled as soon as possible for UTF-8
# support, this check lets us know if MariaDB / MySQL server has just been
# installed and we can quicky apply our own configuration and restart the
# server before any more changes happen.
- name: Check if database server is installed
  environment:
    LC_MESSAGES: 'C'
  shell: dpkg-query -W -f='${Version}\n' 'mariadb-server' 'mysql-server' 'percona-server-server' | grep -v '^$'
  register: mariadb_server_register_version
  changed_when: False
  failed_when: False

- name: Add Percona APT GPG key
  apt_key:
    state: 'present'
    id: '1C4CBDCDCD2EFD2A'
    keyserver: '{{ ansible_local.core.keyserver
                   if (ansible_local|d() and ansible_local.core|d() and
                       ansible_local.core.keyserver|d())
                   else "hkp://pool.sks-keyservers.net" }}'
  when: mariadb_server_flavor in [ 'percona' ]

- name: Add Percona APT repository
  apt_repository:
    repo: 'deb http://repo.percona.com/apt {{ ansible_distribution_release }} main'
    state: 'present'
    update_cache: True
  when: mariadb_server_flavor in [ 'percona' ]

- name: Add MariaDB APT GPG key
  apt_key:
    state: 'present'
    id: '0xcbcb082a1bb943db'
    keyserver: '{{ ansible_local.core.keyserver
                   if (ansible_local|d() and ansible_local.core|d() and
                       ansible_local.core.keyserver|d())
                   else "hkp://keyserver.ubuntu.com:80" }}'
  when: mariadb_server_flavor in [ 'mariadb' ]

- name: Add MariaDB APT repository
  apt_repository:
    repo: 'deb [arch=amd64,i386] http://nyc2.mirrors.digitalocean.com/mariadb/repo/{{ mariadb_server_version }}/ubuntu {{ ansible_distribution_release }} main'
    state: 'present'
    update_cache: True
  when: mariadb_server_flavor in [ 'mariadb' ]

- name: Install database server packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - mariadb_server_base_packages
    - mariadb_server_packages_map[mariadb_server_flavor]
    - mariadb_server_packages
    - [ '{{ "automysqlbackup" if mariadb_server_backup|d() else [] }}' ]
  register: mariadb_server_register_install_status

- name: Add database server user to specified groups
  user:
    name: 'mysql'
    groups: '{{ mariadb_server_append_groups | join(",") | default(omit) }}'
    append: True
    createhome: False
  when: mariadb_server_pki is defined and mariadb_server_pki
  notify: [ 'Restart mysql' ]

- name: Configure database client on first install
  template:
    src: 'etc/mysql/conf.d/client.cnf.j2'
    dest: '/etc/mysql/conf.d/client.cnf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: (mariadb_server_register_version|d() and not mariadb_server_register_version.stdout)

- name: Configure database server
  include: 'configure_server.yml'
  tags: [ 'mariadb_server/configure' ]

- name: Restart database server on first install
  service:
    name: 'mysql'
    state: 'restarted'
  when: ((mariadb_server_register_version|d() and not mariadb_server_register_version.stdout) and
         (mariadb_server_register_install_status|d() and mariadb_server_register_install_status.changed))

- name: Secure database server
  include: 'secure_installation.yml'
  tags: [ 'mariadb_server/secure' ]

- name: Make sure that local fact directory exists
  file:
    dest: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save MariaDB local facts
  template:
    src: 'etc/ansible/facts.d/mariadb.fact.j2'
    dest: '/etc/ansible/facts.d/mariadb.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: mariadb_server_register_local_facts

- name: Re-read local facts if they have been changed
  action: setup
  when: mariadb_server_register_local_facts|d() and
        mariadb_server_register_local_facts.changed

